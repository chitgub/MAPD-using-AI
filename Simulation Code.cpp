#include<graphics.h>
#include<iostream>
#include<dos.h>
#include<string.h>
#include<stdio.h>
using namespace std;
char dirarray[200];
int dirarrlength;
void creategraph(int n)
{
    setbkcolor(0);
    if(n==1)
    {
        outtextxy(10,10,"Original Path String : ");
        outtextxy(300,10,dirarray);
    }
    outtextxy(10,40,"Reduced Path String : ");
    outtextxy(25,325," *");
    outtextxy(1275,300,"**");
    line(50,325,90,325);
    line(90,100,90,450);
    line(90,450,250,450);
    line(90,100,250,100);
    line(250,100,250,250);
    line(250,250,140,250);
    line(140,250,140,150);
    line(250,450,250,600);
    line(250,600,400,600);
    line(250,525,90,525);
    line(90,525,90,600);
    line(90,600,170,600);
    line(90,375,400,375);
    line(400,375,400,100);
    line(400,100,1200,100);
    line(1200,100,1200,200);
    line(1200,200,600,200);
    line(600,200,600,600);
    line(600,600,800,600);
    line(800,600,800,450);
    line(800,450,1000,450);
    line(1000,450,1000,300);
    line(1000,300,675,300);
    line(675,300,675,500);
    line(675,400,900,400);
    line(1200,250,1200,700);
    line(1200,300,1250,300);
    line(1200,700,90,700);
    line(500,700,500,150);
    line(500,150,900,150);
    line(900,150,900,200);
    line(1200,600,900,600);
    line(1100,600,1100,300);
}
void drawbot(int x , int y)
{
    setcolor(8);
    circle(x,y,8);
    setcolor(15);
}
void erasebot(int x , int y)
{
    setcolor(0);
    circle(x,y,8);
    setcolor(15);
}
int checkfinish(int x, int y)
{
   if((x==1250)&&(y==300))
        return 1;
   else
        return 0;
}
int checkintersection(int x, int y)
{
    int n=0;
    if(getpixel(x+1,y)==15)
        n++;
    if(getpixel(x-1,y)==15)
        n++;
    if(getpixel(x,y+1)==15)
        n++;
    if(getpixel(x,y-1)==15)
        n++;
    return n;
}
void reducestring()
{
    int l1=dirarrlength,l2;
    for(int i=0;i<dirarrlength;i++)
    {
        if(dirarray[i]=='f'&&dirarray[i+1]=='b')
        {
            dirarrlength-=2;
            for(int k=i;k<dirarrlength;k++)
                dirarray[k]=dirarray[k+2];
        }
        else
        if(dirarray[i]=='b'&&dirarray[i+1]=='f')
        {
            dirarrlength-=2;
            for(int k=i;k<dirarrlength;k++)
                dirarray[k]=dirarray[k+2];
        }
        else
        if(dirarray[i]=='l'&&dirarray[i+1]=='r')
        {
            dirarrlength-=2;
            for(int k=i;k<dirarrlength;k++)
                dirarray[k]=dirarray[k+2];
        }
        else
        if(dirarray[i]=='r'&&dirarray[i+1]=='l')
        {
            dirarrlength-=2;
            for(int k=i;k<dirarrlength;k++)
                dirarray[k]=dirarray[k+2];
        }
    }
    l2=dirarrlength;
    if(l1!=l2)
        reducestring();
}
int main()
{
    int x=50,y=325,arrpoint=1,n=1,k,counter;
    char direction;
    initwindow(1366,768,"MAZE TESTING");
    creategraph(n);
    //Start Co-ordinates : 100,600
    drawbot(x,y);
    //End Co-ordinates : 900,400
    direction='r';
    dirarray[0]='r';
    //Main Loop Start
    while(1)
    {
        if(direction=='f')
        {
            //Left
            if(getpixel(x-1,y)==15)
            {
                x=x-1;
                erasebot(x+1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='l';
                if(checkintersection(x+1,y)==2)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkintersection(x+1,y)>2)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Forward
            else
            if(getpixel(x,y-1)==15)
            {
                y=y-1;
                erasebot(x,y+1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='f';
                if(checkintersection(x,y+1)>2)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Right
            else
            if(getpixel(x+1,y)==15)
            {
                x=x+1;
                erasebot(x-1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='r';
                if(checkintersection(x+1,y)==2)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkintersection(x-1,y)>2)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Backward
            else
            if(getpixel(x,y+1)==15)
            {
                y=y+1;
                erasebot(x,y-1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='b';
                if(checkintersection(x,y-1)==1)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkintersection(x,y-1)>2)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
        }
        else
        if(direction=='l')
        {
            //Backward
            if(getpixel(x,y+1)==15)
            {
                y=y+1;
                erasebot(x,y-1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='b';
                if(checkintersection(x,y-1)==2)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkintersection(x,y-1)>2)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Left
            else
            if(getpixel(x-1,y)==15)
            {
                x=x-1;
                erasebot(x+1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='l';
                if(checkintersection(x+1,y)>2)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Forward
            else
            if(getpixel(x,y-1)==15)
            {
                y=y-1;
                erasebot(x,y+1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='f';
                if(checkintersection(x,y+1)==2)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkintersection(x,y+1)>2)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Right
            else
            if(getpixel(x+1,y)==15)
            {
                x=x+1;
                erasebot(x-1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='r';
                if(checkintersection(x-1,y)==1)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkintersection(x-1,y)>2)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
        }
        else
        if(direction=='b')
        {
            //Right
            if(getpixel(x+1,y)==15)
            {
                x=x+1;
                erasebot(x-1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='r';
                if(checkintersection(x-1,y)==2)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkintersection(x-1,y)>2)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Backward
            else
            if(getpixel(x,y+1)==15)
            {
                y=y+1;
                erasebot(x,y-1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='b';
                if(checkintersection(x,y-1)>2)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Left
            else
            if(getpixel(x-1,y)==15)
            {
                x=x-1;
                erasebot(x+1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='l';
                if(checkintersection(x+1,y)==2)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkintersection(x+1,y)>2)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Forward
            else
            if(getpixel(x,y-1)==15)
            {
                y=y-1;
                erasebot(x,y+1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='f';
                if(checkintersection(x,y+1)==1)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkintersection(x,y+1)>2)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
        }
        else
        if(direction=='r')
        {
            //Forward
            if(getpixel(x,y-1)==15)
            {
                y=y-1;
                erasebot(x,y+1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='f';
                if(checkintersection(x,y+1)==2)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkintersection(x,y+1)>2)
                {
                    dirarray[arrpoint]='f';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Right
            else
            if(getpixel(x+1,y)==15)
            {
                x=x+1;
                erasebot(x-1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='r';
                if(checkintersection(x-1,y)>2)
                {
                    dirarray[arrpoint]='r';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Backward
            else
            if(getpixel(x,y+1)==15)
            {
                y=y+1;
                erasebot(x,y-1);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='b';
                if(checkintersection(x,y-1)==2)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkintersection(x,y-1)>2)
                {
                    dirarray[arrpoint]='b';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
            //Left
            else
            if(getpixel(x-1,y)==15)
            {
                x=x-1;
                erasebot(x+1,y);
                creategraph(n);
                drawbot(x,y);
                delay(1);
                direction='l';
                if(checkintersection(x+1,y)==1)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkintersection(x+1,y)>2)
                {
                    dirarray[arrpoint]='l';
                    arrpoint+=1;
                }
                if(checkfinish(x,y)==1)
                    break;
            }
        }
    }
    //Main Loop End
    for(k=0;dirarray[k]=='f'||dirarray[k]=='b'||dirarray[k]=='l'||dirarray[k]=='r';k++);
    dirarrlength=k;
    reducestring();
    dirarray[dirarrlength]='\0';
    outtextxy(300,40,dirarray);
    //Path Discovery End
    getch();
    //Following the path discovered
    direction=dirarray[0];
    x=50;
    y=325;
    counter=1;
    erasebot(1250,300);
    n=2;
    creategraph(n);
    while(1)
    {
        if(direction=='f')
        {
            if(checkfinish(x,y)==1)
                break;
            delay(1);
            erasebot(x,y);
            creategraph(n);
            y=y-1;
            drawbot(x,y);
            if((getpixel(x,y+1)==15)&&(getpixel(x,y-1)==15)&&(checkintersection(x,y)==2));
            else
            if(checkintersection(x,y)>=2)
                direction=dirarray[counter++];

        }
        else
        if(direction=='b')
        {
            if(checkfinish(x,y)==1)
                break;
            delay(1);
            erasebot(x,y);
            creategraph(n);
            y=y+1;
            drawbot(x,y);
            if((getpixel(x,y+1)==15)&&(getpixel(x,y-1)==15)&&(checkintersection(x,y)==2));
            else
            if(checkintersection(x,y)>=2)
                direction=dirarray[counter++];
        }
        else
        if(direction=='l')
        {
            if(checkfinish(x,y)==1)
                break;
            delay(1);
            erasebot(x,y);
            creategraph(n);
            x=x-1;
            drawbot(x,y);
            if((getpixel(x+1,y)==15)&&(getpixel(x-1,y)==15)&&(checkintersection(x,y)==2));
            else
            if(checkintersection(x,y)>=2)
                direction=dirarray[counter++];
        }
        else
        if(direction=='r')
        {
            if(checkfinish(x,y)==1)
                break;
            delay(1);
            erasebot(x,y);
            creategraph(n);
            x=x+1;
            drawbot(x,y);
            if((getpixel(x+1,y)==15)&&(getpixel(x-1,y)==15)&&(checkintersection(x,y)==2));
            else
            if(checkintersection(x,y)>=2)
                direction=dirarray[counter++];
        }
    }
    getch();
    return 0;
}
